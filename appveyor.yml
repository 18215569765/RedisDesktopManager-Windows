os: Visual Studio 2017
version: 0.9.2.{build}
clone_depth: 5
install:
- set /P RDM_VERSION=<version.txt
- git clone -q --depth=5 --branch=%RDM_VERSION% https://github.com/uglide/RedisDesktopManager.git C:\projects\redisdesktopmanager
- set SRCDIR=C:\projects\RedisDesktopManager
- set QTDIR=C:\Qt\5.9\msvc2017_64
- set PATH=%QTDIR%\bin;%PATH%
- cd %SRCDIR%
- git describe --abbrev=0 --tags
- git rev-parse --short HEAD
- git submodule update --init --recursive
- call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
- qmake -v

build_script:
- cd %SRCDIR%
- cd ./3rdparty/qredisclient/
- powershell -command "(New-Object System.Net.WebClient).DownloadFile('%deps_url%', 'deps.zip')"
- 7z.exe x deps.zip
- del /F qredisclient.lib
- cd %SRCDIR%
- python ./build/utils/set_version.py %RDM_VERSION% > ./src/version.h
- python ./build/utils/set_version.py %RDM_VERSION% > ./3rdparty/crashreporter/src/version.h
- cd ./3rdparty/crashreporter
- qmake CONFIG+=release DESTDIR=%SRCDIR%/bin/windows/release
- powershell -Command "(Get-Content Makefile.Release).replace('DEFINES       =', 'DEFINES       = -DAPP_NAME=\\\"RedisDesktopManager\\\" -DAPP_VERSION=\\\""%RDM_VERSION%"\\\" -DCRASH_SERVER_URL=\\\"https://oops.redisdesktop.com/crash-report\\\"') " > Makefile.Release2
- nmake -f Makefile.Release2
- cd %SRCDIR%/3rdparty
- nuget install zlib-msvc14-x64 -Version 1.2.11.7795
- cd qredisclient/3rdparty/hiredis
- git apply ../hiredis-win.patch
- cd %SRCDIR%/src
- lrelease rdm.pro
- qmake CONFIG+=release
- nmake /S /NOLOGO release
- cd %SRCDIR%
- copy /y .\bin\windows\release\rdm.exe .\build\windows\installer\resources\rdm.exe
- copy /y .\bin\windows\release\crashreporter.exe .\build\windows\installer\resources\crashreporter.exe
- copy /y .\bin\windows\release\rdm.pdb .\build\windows\installer\resources\rdm.pdb
- copy /y .\3rdparty\qredisclient\botan.dll .\build\windows\installer\resources\botan.dll
- .\3rdparty\gbreakpad\src\tools\windows\binaries\dump_syms .\bin\windows\release\rdm.pdb > .\build\windows\installer\resources\rdm.sym
- cd build/windows/installer/resources/
- windeployqt --no-angle --no-opengl-sw --no-compiler-runtime --no-translations --release --force --qmldir %SRCDIR%/src/qml rdm.exe
- rmdir /S /Q .\platforminputcontexts
- rmdir /S /Q .\qmltooling
- rmdir /S /Q .\QtGraphicalEffects
- del /Q  .\imageformats\qtiff.dll
- del /Q  .\imageformats\qwebp.dll
- C:\Python37\python.exe -m pip install -t . -r %SRCDIR%/src/py/requirements.txt
- cd %SRCDIR%
- call "C:\\Program Files (x86)\\NSIS\\makensis.exe" /V1 /DVERSION=%RDM_VERSION% ./build/windows/installer/installer.nsi
- cd %APPVEYOR_BUILD_FOLDER%
- 7z.exe a redis-desktop-manager-%RDM_VERSION%.zip  %SRCDIR%/build/windows/installer/redis-desktop-manager-%APPVEYOR_BUILD_VERSION%.exe
artifacts:
- path: redis-desktop-manager-$(RDM_VERSION).zip
deploy:
  release: $(RDM_VERSION)
  description: $(RDM_VERSION)
  provider: GitHub
  auth_token:
    secure: $(token) # your encrypted token from GitHub
  artifact: redis-desktop-manager-$(RDM_VERSION).zip   # upload all NuGet packages to release assets
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
